# Animate the plot using the reversed frame variable
anim <- p + transition_reveal(frame_rev)
# Render the animation with custom dimensions (e.g., wider)
animation <- animate(anim, width = 1600, height = 500, fps = 30, duration = 10, renderer = gifski_renderer())
# Save the animation as a GIF file
anim_save('/Users/jtostlebe/Library/CloudStorage/OneDrive-UniversityofNebraskaatOmaha/ARC Lab/Logo and Site Banner/Curve animation.gif', animation)
library(ggplot2)
library(gifski)
library(gganimate)
# Generate data for the upward exponential curve
x <- seq(1, 40, length.out = 100)
y <- 5 * exp(0.1 * (x - 40))  # Exponential function starting low and increasing
data <- data.frame(x = x, y = y)
data$frame <- seq_along(x)
# Create a reversed frame variable so that frame 1 becomes 100, 2 becomes 99, etc.
data$frame_rev <- max(data$frame) - data$frame + 1
# Create the plot using the reversed frame for animation
p <- ggplot(data, aes(x = x, y = y)) +
geom_line(color = "white", size = 2) +  # Exponential curve
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 12) +  # Moving star
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 18, alpha = 0.3) +  # Soft glow layer
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 24, alpha = 0.1) +  # Outer glow
annotate("text", x = min(data$x), y = max(data$y) * 0.98, label = "ARC Lab",
color = "white", size = 10, hjust = -6, vjust = 1) +
theme_void() +  # Remove background, gridlines, and axes
theme(plot.background = element_rect(fill = "black", color = NA)) +  # Black background
labs(title = "Exponential Function with Moving Star")
#windows()
p
# Animate the plot using the reversed frame variable
anim <- p + transition_reveal(frame_rev)
# Render the animation with custom dimensions (e.g., wider)
animation <- animate(anim, width = 1600, height = 500, fps = 30, duration = 10, renderer = gifski_renderer())
# Save the animation as a GIF file
anim_save('/Users/jtostlebe/Library/CloudStorage/OneDrive-UniversityofNebraskaatOmaha/ARC Lab/Logo and Site Banner/Curve animation.gif', animation)
library(ggplot2)
library(gifski)
library(gganimate)
# Generate data for the upward exponential curve
x <- seq(1, 40, length.out = 100)
y <- 5 * exp(0.1 * (x - 40))  # Exponential function starting low and increasing
data <- data.frame(x = x, y = y)
data$frame <- seq_along(x)
# Create a reversed frame variable so that frame 1 becomes 100, 2 becomes 99, etc.
data$frame_rev <- max(data$frame) - data$frame + 1
# Create the plot using the reversed frame for animation
p <- ggplot(data, aes(x = x, y = y)) +
geom_line(color = "white", size = 2) +  # Exponential curve
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 12) +  # Moving star
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 18, alpha = 0.3) +  # Soft glow layer
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 24, alpha = 0.1) +  # Outer glow
annotate("text", x = min(data$x), y = max(data$y) * 0.98, label = "ARC Lab",
color = "white", size = 10, hjust = -5.75, vjust = 1) +
theme_void() +  # Remove background, gridlines, and axes
theme(plot.background = element_rect(fill = "black", color = NA)) +  # Black background
labs(title = "Exponential Function with Moving Star")
#windows()
p
# Animate the plot using the reversed frame variable
anim <- p + transition_reveal(frame_rev)
# Render the animation with custom dimensions (e.g., wider)
animation <- animate(anim, width = 1600, height = 500, fps = 30, duration = 10, renderer = gifski_renderer())
# Save the animation as a GIF file
anim_save('/Users/jtostlebe/Library/CloudStorage/OneDrive-UniversityofNebraskaatOmaha/ARC Lab/Logo and Site Banner/Curve animation.gif', animation)
library(ggplot2)
library(gifski)
library(gganimate)
# Generate data for the upward exponential curve
x <- seq(1, 40, length.out = 100)
y <- 5 * exp(0.1 * (x - 40))  # Exponential function starting low and increasing
data <- data.frame(x = x, y = y)
data$frame <- seq_along(x)
# Create a reversed frame variable so that frame 1 becomes 100, 2 becomes 99, etc.
data$frame_rev <- max(data$frame) - data$frame + 1
# Create the plot using the reversed frame for animation
p <- ggplot(data, aes(x = x, y = y)) +
geom_line(color = "white", size = 2) +  # Exponential curve
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 12) +  # Moving star
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 18, alpha = 0.3) +  # Soft glow layer
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 24, alpha = 0.1) +  # Outer glow
annotate("text", x = min(data$x), y = max(data$y) * 0.98, label = "ARC Lab",
color = "white", size = 10, hjust = -5.5, vjust = 1) +
theme_void() +  # Remove background, gridlines, and axes
theme(plot.background = element_rect(fill = "black", color = NA)) +  # Black background
labs(title = "Exponential Function with Moving Star")
#windows()
p
# Animate the plot using the reversed frame variable
anim <- p + transition_reveal(frame_rev)
# Render the animation with custom dimensions (e.g., wider)
animation <- animate(anim, width = 1600, height = 475, fps = 30, duration = 10, renderer = gifski_renderer())
# Save the animation as a GIF file
anim_save('/Users/jtostlebe/Library/CloudStorage/OneDrive-UniversityofNebraskaatOmaha/ARC Lab/Logo and Site Banner/Curve animation.gif', animation)
library(ggplot2)
library(gifski)
library(gganimate)
# Generate data for the upward exponential curve
x <- seq(1, 40, length.out = 100)
y <- 5 * exp(0.1 * (x - 40))  # Exponential function starting low and increasing
data <- data.frame(x = x, y = y)
data$frame <- seq_along(x)
# Create a reversed frame variable so that frame 1 becomes 100, 2 becomes 99, etc.
data$frame_rev <- max(data$frame) - data$frame + 1
# Create the plot using the reversed frame for animation
p <- ggplot(data, aes(x = x, y = y)) +
geom_line(color = "white", size = 2) +  # Exponential curve
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 12) +  # Moving star
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 18, alpha = 0.3) +  # Soft glow layer
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 24, alpha = 0.1) +  # Outer glow
annotate("text", x = min(data$x), y = max(data$y) * 0.98, label = "ARC Lab",
color = "white", size = 10, hjust = -5.7, vjust = 1) +
theme_void() +  # Remove background, gridlines, and axes
theme(plot.background = element_rect(fill = "black", color = NA)) +  # Black background
labs(title = "Exponential Function with Moving Star")
#windows()
p
# Animate the plot using the reversed frame variable
anim <- p + transition_reveal(frame_rev)
# Render the animation with custom dimensions (e.g., wider)
animation <- animate(anim, width = 1600, height = 475, fps = 30, duration = 10, renderer = gifski_renderer())
# Save the animation as a GIF file
anim_save('/Users/jtostlebe/Library/CloudStorage/OneDrive-UniversityofNebraskaatOmaha/ARC Lab/Logo and Site Banner/Curve animation.gif', animation)
library(ggplot2)
library(gifski)
library(gganimate)
# Generate data for the upward exponential curve
x <- seq(1, 40, length.out = 100)
y <- 5 * exp(0.1 * (x - 40))  # Exponential function starting low and increasing
data <- data.frame(x = x, y = y)
data$frame <- seq_along(x)
# Create a reversed frame variable so that frame 1 becomes 100, 2 becomes 99, etc.
data$frame_rev <- max(data$frame) - data$frame + 1
# Create the plot using the reversed frame for animation
p <- ggplot(data, aes(x = x, y = y)) +
geom_line(color = "white", size = 3) +  # Exponential curve
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 12) +  # Moving star
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 18, alpha = 0.3) +  # Soft glow layer
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 24, alpha = 0.1) +  # Outer glow
annotate("text", x = min(data$x), y = max(data$y) * 0.98, label = "ARC Lab",
color = "white", size = 10, hjust = -5.7, vjust = 1) +
theme_void() +  # Remove background, gridlines, and axes
theme(plot.background = element_rect(fill = "black", color = NA)) +  # Black background
labs(title = "Exponential Function with Moving Star")
#windows()
p
# Animate the plot using the reversed frame variable
anim <- p + transition_reveal(frame_rev)
# Render the animation with custom dimensions (e.g., wider)
animation <- animate(anim, width = 1600, height = 475, fps = 30, duration = 10, renderer = gifski_renderer())
# Save the animation as a GIF file
anim_save('/Users/jtostlebe/Library/CloudStorage/OneDrive-UniversityofNebraskaatOmaha/ARC Lab/Logo and Site Banner/Curve animation.gif', animation)
# Render the animation with custom dimensions (e.g., wider)
animation <- animate(anim, width = 1300, height = 500, fps = 30, duration = 10, renderer = gifski_renderer())
library(ggplot2)
library(gifski)
library(gganimate)
# Generate data for the upward exponential curve
x <- seq(1, 40, length.out = 100)
y <- 5 * exp(0.1 * (x - 40))  # Exponential function starting low and increasing
data <- data.frame(x = x, y = y)
data$frame <- seq_along(x)
# Create a reversed frame variable so that frame 1 becomes 100, 2 becomes 99, etc.
data$frame_rev <- max(data$frame) - data$frame + 1
# Create the plot using the reversed frame for animation
p <- ggplot(data, aes(x = x, y = y)) +
geom_line(color = "white", size = 3) +  # Exponential curve
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 12) +  # Moving star
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 18, alpha = 0.3) +  # Soft glow layer
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 24, alpha = 0.1) +  # Outer glow
annotate("text", x = min(data$x), y = max(data$y) * 0.98, label = "ARC Lab",
color = "white", size = 10, hjust = -5.7, vjust = 1) +
theme_void() +  # Remove background, gridlines, and axes
theme(plot.background = element_rect(fill = "black", color = NA)) +  # Black background
labs(title = "Exponential Function with Moving Star")
#windows()
p
# Animate the plot using the reversed frame variable
anim <- p + transition_reveal(frame_rev)
# Render the animation with custom dimensions (e.g., wider)
animation <- animate(anim, width = 1500, height = 700, fps = 30, duration = 10, renderer = gifski_renderer())
# Save the animation as a GIF file
anim_save('/Users/jtostlebe/Library/CloudStorage/OneDrive-UniversityofNebraskaatOmaha/ARC Lab/Logo and Site Banner/Curve animation.gif', animation)
library(ggplot2)
library(gifski)
library(gganimate)
# Generate data for the upward exponential curve
x <- seq(1, 40, length.out = 100)
y <- 5 * exp(0.1 * (x - 40))  # Exponential function starting low and increasing
data <- data.frame(x = x, y = y)
data$frame <- seq_along(x)
# Create a reversed frame variable so that frame 1 becomes 100, 2 becomes 99, etc.
data$frame_rev <- max(data$frame) - data$frame + 1
# Create the plot using the reversed frame for animation
p <- ggplot(data, aes(x = x, y = y)) +
geom_line(color = "white", size = 3) +  # Exponential curve
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 12) +  # Moving star
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 18, alpha = 0.3) +  # Soft glow layer
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 24, alpha = 0.1) +  # Outer glow
annotate("text", x = min(data$x), y = max(data$y) * 0.98, label = "ARC Lab",
color = "white", size = 10, hjust = -5.7, vjust = 1) +
theme_void() +  # Remove background, gridlines, and axes
theme(plot.background = element_rect(fill = "black", color = NA)) +  # Black background
labs(title = "Exponential Function with Moving Star")
#windows()
p
# Animate the plot using the reversed frame variable
anim <- p + transition_reveal(frame_rev)
# Render the animation with custom dimensions (e.g., wider)
animation <- animate(anim, width = 1500, height = 500, fps = 30, duration = 10, renderer = gifski_renderer())
# Save the animation as a GIF file
anim_save('/Users/jtostlebe/Library/CloudStorage/OneDrive-UniversityofNebraskaatOmaha/ARC Lab/Logo and Site Banner/Curve animation.gif', animation)
# Create the plot using the reversed frame for animation
p <- ggplot(data, aes(x = x, y = y)) +
geom_line(color = "white", size = 3) +  # Exponential curve
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 12) +  # Moving star
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 18, alpha = 0.3) +  # Soft glow layer
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 24, alpha = 0.1) +  # Outer glow
annotate("text", x = min(data$x), y = max(data$y) * 0.98, label = "ARC Lab",
color = "white", size = 20, hjust = -5.7, vjust = 1) +
theme_void() +  # Remove background, gridlines, and axes
theme(plot.background = element_rect(fill = "black", color = NA)) +  # Black background
labs(title = "Exponential Function with Moving Star")
library(ggplot2)
library(gifski)
library(gganimate)
# Generate data for the upward exponential curve
x <- seq(1, 40, length.out = 100)
y <- 5 * exp(0.1 * (x - 40))  # Exponential function starting low and increasing
data <- data.frame(x = x, y = y)
data$frame <- seq_along(x)
# Create a reversed frame variable so that frame 1 becomes 100, 2 becomes 99, etc.
data$frame_rev <- max(data$frame) - data$frame + 1
# Create the plot using the reversed frame for animation
p <- ggplot(data, aes(x = x, y = y)) +
geom_line(color = "white", size = 3) +  # Exponential curve
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 12) +  # Moving star
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 18, alpha = 0.3) +  # Soft glow layer
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 24, alpha = 0.1) +  # Outer glow
annotate("text", x = min(data$x), y = max(data$y) * 0.98, label = "ARC Lab",
color = "white", size = 20, hjust = -5.7, vjust = 1) +
theme_void() +  # Remove background, gridlines, and axes
theme(plot.background = element_rect(fill = "black", color = NA)) +  # Black background
labs(title = "Exponential Function with Moving Star")
#windows()
p
# Animate the plot using the reversed frame variable
anim <- p + transition_reveal(frame_rev)
# Render the animation with custom dimensions (e.g., wider)
animation <- animate(anim, width = 1500, height = 500, fps = 30, duration = 10, renderer = gifski_renderer())
# Save the animation as a GIF file
anim_save('/Users/jtostlebe/Library/CloudStorage/OneDrive-UniversityofNebraskaatOmaha/ARC Lab/Logo and Site Banner/Curve animation.gif', animation)
library(ggplot2)
library(gifski)
library(gganimate)
# Generate data for the upward exponential curve
x <- seq(1, 40, length.out = 100)
y <- 5 * exp(0.1 * (x - 40))  # Exponential function starting low and increasing
data <- data.frame(x = x, y = y)
data$frame <- seq_along(x)
# Create a reversed frame variable so that frame 1 becomes 100, 2 becomes 99, etc.
data$frame_rev <- max(data$frame) - data$frame + 1
# Create the plot using the reversed frame for animation
p <- ggplot(data, aes(x = x, y = y)) +
geom_line(color = "white", size = 3) +  # Exponential curve
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 12) +  # Moving star
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 18, alpha = 0.3) +  # Soft glow layer
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 24, alpha = 0.1) +  # Outer glow
annotate("text", x = min(data$x), y = max(data$y) * 0.98, label = "ARC Lab",
color = "white", size = 20, hjust = -2, vjust = 1) +
theme_void() +  # Remove background, gridlines, and axes
theme(plot.background = element_rect(fill = "black", color = NA)) +  # Black background
labs(title = "Exponential Function with Moving Star")
#windows()
p
# Animate the plot using the reversed frame variable
anim <- p + transition_reveal(frame_rev)
# Render the animation with custom dimensions (e.g., wider)
animation <- animate(anim, width = 1500, height = 500, fps = 30, duration = 10, renderer = gifski_renderer())
# Save the animation as a GIF file
anim_save('/Users/jtostlebe/Library/CloudStorage/OneDrive-UniversityofNebraskaatOmaha/ARC Lab/Logo and Site Banner/Curve animation.gif', animation)
library(ggplot2)
library(gifski)
library(gganimate)
# Generate data for the upward exponential curve
x <- seq(1, 40, length.out = 100)
y <- 5 * exp(0.1 * (x - 40))  # Exponential function starting low and increasing
data <- data.frame(x = x, y = y)
data$frame <- seq_along(x)
# Create a reversed frame variable so that frame 1 becomes 100, 2 becomes 99, etc.
data$frame_rev <- max(data$frame) - data$frame + 1
# Create the plot using the reversed frame for animation
p <- ggplot(data, aes(x = x, y = y)) +
geom_line(color = "white", size = 3) +  # Exponential curve
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 12) +  # Moving star
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 18, alpha = 0.3) +  # Soft glow layer
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 24, alpha = 0.1) +  # Outer glow
annotate("text", x = min(data$x), y = max(data$y) * 0.98, label = "ARC Lab",
color = "white", size = 20, hjust = -3, vjust = 1) +
theme_void() +  # Remove background, gridlines, and axes
theme(plot.background = element_rect(fill = "black", color = NA)) +  # Black background
labs(title = "Exponential Function with Moving Star")
#windows()
p
# Animate the plot using the reversed frame variable
anim <- p + transition_reveal(frame_rev)
# Render the animation with custom dimensions (e.g., wider)
animation <- animate(anim, width = 1500, height = 500, fps = 30, duration = 10, renderer = gifski_renderer())
# Save the animation as a GIF file
anim_save('/Users/jtostlebe/Library/CloudStorage/OneDrive-UniversityofNebraskaatOmaha/ARC Lab/Logo and Site Banner/Curve animation.gif', animation)
library(ggplot2)
library(gifski)
library(gganimate)
# Generate data for the upward exponential curve
x <- seq(1, 40, length.out = 100)
y <- 5 * exp(0.1 * (x - 40))  # Exponential function starting low and increasing
data <- data.frame(x = x, y = y)
data$frame <- seq_along(x)
# Create a reversed frame variable so that frame 1 becomes 100, 2 becomes 99, etc.
data$frame_rev <- max(data$frame) - data$frame + 1
# Create the plot using the reversed frame for animation
p <- ggplot(data, aes(x = x, y = y)) +
geom_line(color = "white", size = 3) +  # Exponential curve
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 12) +  # Moving star
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 18, alpha = 0.3) +  # Soft glow layer
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 24, alpha = 0.1) +  # Outer glow
annotate("text", x = min(data$x), y = max(data$y) * 0.98, label = "ARC Lab",
color = "white", size = 20, hjust = -2.5, vjust = 1) +
theme_void() +  # Remove background, gridlines, and axes
theme(plot.background = element_rect(fill = "black", color = NA)) +  # Black background
labs(title = "Exponential Function with Moving Star")
#windows()
p
# Animate the plot using the reversed frame variable
anim <- p + transition_reveal(frame_rev)
# Render the animation with custom dimensions (e.g., wider)
animation <- animate(anim, width = 1500, height = 500, fps = 30, duration = 10, renderer = gifski_renderer())
# Save the animation as a GIF file
anim_save('/Users/jtostlebe/Library/CloudStorage/OneDrive-UniversityofNebraskaatOmaha/ARC Lab/Logo and Site Banner/Curve animation.gif', animation)
library(ggplot2)
library(gifski)
library(gganimate)
# Generate data for the upward exponential curve
x <- seq(1, 40, length.out = 100)
y <- 5 * exp(0.1 * (x - 40))  # Exponential function starting low and increasing
data <- data.frame(x = x, y = y)
data$frame <- seq_along(x)
# Create a reversed frame variable so that frame 1 becomes 100, 2 becomes 99, etc.
data$frame_rev <- max(data$frame) - data$frame + 1
# Create the plot using the reversed frame for animation
p <- ggplot(data, aes(x = x, y = y)) +
geom_line(color = "white", size = 3) +  # Exponential curve
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 12) +  # Moving star
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 18, alpha = 0.3) +  # Soft glow layer
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 24, alpha = 0.1) +  # Outer glow
annotate("text", x = min(data$x), y = max(data$y) * 0.98, label = "ARC Lab",
color = "white", size = 20, hjust = -2.35, vjust = 1) +
theme_void() +  # Remove background, gridlines, and axes
theme(plot.background = element_rect(fill = "black", color = NA)) +  # Black background
labs(title = "Exponential Function with Moving Star")
#windows()
p
# Animate the plot using the reversed frame variable
anim <- p + transition_reveal(frame_rev)
# Render the animation with custom dimensions (e.g., wider)
animation <- animate(anim, width = 1500, height = 500, fps = 30, duration = 10, renderer = gifski_renderer())
# Save the animation as a GIF file
anim_save('/Users/jtostlebe/Library/CloudStorage/OneDrive-UniversityofNebraskaatOmaha/ARC Lab/Logo and Site Banner/Curve animation.gif', animation)
library(ggplot2)
library(gifski)
library(gganimate)
# Generate data for the upward exponential curve
x <- seq(1, 40, length.out = 100)
y <- 5 * exp(0.1 * (x - 40))  # Exponential function starting low and increasing
data <- data.frame(x = x, y = y)
data$frame <- seq_along(x)
# Create a reversed frame variable so that frame 1 becomes 100, 2 becomes 99, etc.
data$frame_rev <- max(data$frame) - data$frame + 1
# Create the plot using the reversed frame for animation
p <- ggplot(data, aes(x = x, y = y)) +
geom_line(color = "white", size = 3) +  # Exponential curve
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 12) +  # Moving star
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 18, alpha = 0.3) +  # Soft glow layer
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 24, alpha = 0.1) +  # Outer glow
annotate("text", x = min(data$x), y = max(data$y) * 0.98, label = "ARC Lab",
color = "white", size = 30, hjust = -2.35, vjust = 1) +
theme_void() +  # Remove background, gridlines, and axes
theme(plot.background = element_rect(fill = "black", color = NA)) +  # Black background
labs(title = "Exponential Function with Moving Star")
#windows()
p
# Animate the plot using the reversed frame variable
anim <- p + transition_reveal(frame_rev)
# Render the animation with custom dimensions (e.g., wider)
animation <- animate(anim, width = 1500, height = 500, fps = 30, duration = 10, renderer = gifski_renderer())
# Save the animation as a GIF file
anim_save('/Users/jtostlebe/Library/CloudStorage/OneDrive-UniversityofNebraskaatOmaha/ARC Lab/Logo and Site Banner/Curve animation.gif', animation)
library(ggplot2)
library(gifski)
library(gganimate)
# Generate data for the upward exponential curve
x <- seq(1, 40, length.out = 100)
y <- 5 * exp(0.1 * (x - 40))  # Exponential function starting low and increasing
data <- data.frame(x = x, y = y)
data$frame <- seq_along(x)
# Create a reversed frame variable so that frame 1 becomes 100, 2 becomes 99, etc.
data$frame_rev <- max(data$frame) - data$frame + 1
# Create the plot using the reversed frame for animation
p <- ggplot(data, aes(x = x, y = y)) +
geom_line(color = "white", size = 3) +  # Exponential curve
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 12) +  # Moving star
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 18, alpha = 0.3) +  # Soft glow layer
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 24, alpha = 0.1) +  # Outer glow
annotate("text", x = min(data$x), y = max(data$y) * 0.98, label = "ARC Lab",
color = "white", size = 30, hjust = -1.35, vjust = 1) +
theme_void() +  # Remove background, gridlines, and axes
theme(plot.background = element_rect(fill = "black", color = NA)) +  # Black background
labs(title = "Exponential Function with Moving Star")
#windows()
p
# Animate the plot using the reversed frame variable
anim <- p + transition_reveal(frame_rev)
# Render the animation with custom dimensions (e.g., wider)
animation <- animate(anim, width = 1500, height = 500, fps = 30, duration = 10, renderer = gifski_renderer())
# Save the animation as a GIF file
anim_save('/Users/jtostlebe/Library/CloudStorage/OneDrive-UniversityofNebraskaatOmaha/ARC Lab/Logo and Site Banner/Curve animation.gif', animation)
library(ggplot2)
library(gifski)
library(gganimate)
# Generate data for the upward exponential curve
x <- seq(1, 40, length.out = 100)
y <- 5 * exp(0.1 * (x - 40))  # Exponential function starting low and increasing
data <- data.frame(x = x, y = y)
data$frame <- seq_along(x)
# Create a reversed frame variable so that frame 1 becomes 100, 2 becomes 99, etc.
data$frame_rev <- max(data$frame) - data$frame + 1
# Create the plot using the reversed frame for animation
p <- ggplot(data, aes(x = x, y = y)) +
geom_line(color = "white", size = 3) +  # Exponential curve
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 12) +  # Moving star
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 18, alpha = 0.3) +  # Soft glow layer
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 24, alpha = 0.1) +  # Outer glow
annotate("text", x = min(data$x), y = max(data$y) * 0.98, label = "ARC Lab",
color = "white", size = 30, hjust = -1.5, vjust = 1) +
theme_void() +  # Remove background, gridlines, and axes
theme(plot.background = element_rect(fill = "black", color = NA)) +  # Black background
labs(title = "Exponential Function with Moving Star")
#windows()
p
# Animate the plot using the reversed frame variable
anim <- p + transition_reveal(frame_rev)
# Render the animation with custom dimensions (e.g., wider)
animation <- animate(anim, width = 1500, height = 500, fps = 30, duration = 10, renderer = gifski_renderer())
# Save the animation as a GIF file
anim_save('/Users/jtostlebe/Library/CloudStorage/OneDrive-UniversityofNebraskaatOmaha/ARC Lab/Logo and Site Banner/Curve animation.gif', animation)
library(ggplot2)
library(gifski)
library(gganimate)
# Generate data for the upward exponential curve
x <- seq(1, 40, length.out = 100)
y <- 5 * exp(0.1 * (x - 40))  # Exponential function starting low and increasing
data <- data.frame(x = x, y = y)
data$frame <- seq_along(x)
# Create a reversed frame variable so that frame 1 becomes 100, 2 becomes 99, etc.
data$frame_rev <- max(data$frame) - data$frame + 1
# Create the plot using the reversed frame for animation
p <- ggplot(data, aes(x = x, y = y)) +
geom_line(color = "white", size = 3) +  # Exponential curve
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 12) +  # Moving star
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 18, alpha = 0.3) +  # Soft glow layer
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 24, alpha = 0.1) +  # Outer glow
annotate("text", x = min(data$x), y = max(data$y) * 0.98, label = "ARC Lab",
color = "white", size = 40, hjust = -1.5, vjust = 1) +
theme_void() +  # Remove background, gridlines, and axes
theme(plot.background = element_rect(fill = "black", color = NA)) +  # Black background
labs(title = "Exponential Function with Moving Star")
#windows()
p
# Animate the plot using the reversed frame variable
anim <- p + transition_reveal(frame_rev)
# Render the animation with custom dimensions (e.g., wider)
animation <- animate(anim, width = 1500, height = 500, fps = 30, duration = 10, renderer = gifski_renderer())
# Save the animation as a GIF file
anim_save('/Users/jtostlebe/Library/CloudStorage/OneDrive-UniversityofNebraskaatOmaha/ARC Lab/Logo and Site Banner/Curve animation.gif', animation)
library(ggplot2)
library(gifski)
library(gganimate)
# Generate data for the upward exponential curve
x <- seq(1, 40, length.out = 100)
y <- 5 * exp(0.1 * (x - 40))  # Exponential function starting low and increasing
data <- data.frame(x = x, y = y)
data$frame <- seq_along(x)
# Create a reversed frame variable so that frame 1 becomes 100, 2 becomes 99, etc.
data$frame_rev <- max(data$frame) - data$frame + 1
# Create the plot using the reversed frame for animation
p <- ggplot(data, aes(x = x, y = y)) +
geom_line(color = "white", size = 3) +  # Exponential curve
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 12) +  # Moving star
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 18, alpha = 0.3) +  # Soft glow layer
geom_point(aes(frame = frame_rev), shape = 8, color = "#0099FF", size = 24, alpha = 0.1) +  # Outer glow
annotate("text", x = min(data$x), y = max(data$y) * 0.98, label = "ARC Lab",
color = "white", size = 40, hjust = -1, vjust = 1) +
theme_void() +  # Remove background, gridlines, and axes
theme(plot.background = element_rect(fill = "black", color = NA)) +  # Black background
labs(title = "Exponential Function with Moving Star")
#windows()
p
# Animate the plot using the reversed frame variable
anim <- p + transition_reveal(frame_rev)
# Render the animation with custom dimensions (e.g., wider)
animation <- animate(anim, width = 1500, height = 500, fps = 30, duration = 10, renderer = gifski_renderer())
# Save the animation as a GIF file
anim_save('/Users/jtostlebe/Library/CloudStorage/OneDrive-UniversityofNebraskaatOmaha/ARC Lab/Logo and Site Banner/Curve animation.gif', animation)
